// <auto-generated />
using System;
using BMSHPMS;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BMSHPMS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240614075413_ReceiptAddDSId")]
    partial class ReceiptAddDSId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_AutoComplete", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Info_AutoComplete");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Donor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BenefactorName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("陽居姓名");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DProjectSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DProjectSerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("DSRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("備註");

                    b.Property<string>("DeceasedName_1")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_1");

                    b.Property<string>("DeceasedName_2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_2");

                    b.Property<string>("DeceasedName_3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_3");

                    b.Property<Guid?>("DonationProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LongevityName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("延生位姓名");

                    b.Property<Guid?>("ReceiptID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("收據ID");

                    b.Property<string>("SerialCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("功德主編號");

                    b.Property<int?>("Sum")
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ReceiptID");

                    b.ToTable("Info_Donor");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Donor_del", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BenefactorName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("陽居姓名");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DSRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("備註");

                    b.Property<string>("DeceasedName_1")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_1");

                    b.Property<string>("DeceasedName_2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_2");

                    b.Property<string>("DeceasedName_3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_3");

                    b.Property<string>("LongevityName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("延生位姓名");

                    b.Property<Guid?>("Receipt_delID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("收據ID");

                    b.Property<string>("SerialCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("功德主編號");

                    b.Property<int?>("Sum")
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Receipt_delID");

                    b.ToTable("Info_Donor_del");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Longevity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DProjectSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DProjectSerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("DSRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("備註");

                    b.Property<Guid?>("DonationProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("姓名");

                    b.Property<Guid?>("ReceiptID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("收據ID");

                    b.Property<string>("SerialCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("延生編號");

                    b.Property<int?>("Sum")
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ReceiptID");

                    b.ToTable("Info_Longevity");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Longevity_del", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DSRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("備註");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("姓名");

                    b.Property<Guid?>("Receipt_delID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("收據ID");

                    b.Property<string>("SerialCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("延生編號");

                    b.Property<int?>("Sum")
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Receipt_delID");

                    b.ToTable("Info_Longevity_del");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Memorial", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BenefactorName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("陽居姓名");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DProjectSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DProjectSerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("DSRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("備註");

                    b.Property<string>("DeceasedName_1")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_1");

                    b.Property<string>("DeceasedName_2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_2");

                    b.Property<string>("DeceasedName_3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_3");

                    b.Property<Guid?>("DonationProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReceiptID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("收據ID");

                    b.Property<string>("SerialCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦編號");

                    b.Property<int?>("Sum")
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ReceiptID");

                    b.ToTable("Info_Memorial");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Memorial_del", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BenefactorName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("陽居姓名");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DSRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("備註");

                    b.Property<string>("DeceasedName_1")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_1");

                    b.Property<string>("DeceasedName_2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_2");

                    b.Property<string>("DeceasedName_3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦名稱_3");

                    b.Property<Guid?>("Receipt_delID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("收據ID");

                    b.Property<string>("SerialCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附薦編號");

                    b.Property<int?>("Sum")
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Receipt_delID");

                    b.ToTable("Info_Memorial_del");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Receipt", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("聯絡人姓名");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("聯絡人電話");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DSRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("備註");

                    b.Property<Guid?>("DharmaServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DharmaServiceName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("法會名");

                    b.Property<int?>("DharmaServiceYear")
                        .HasColumnType("int")
                        .HasComment("法會年份");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2")
                        .HasComment("收據日期");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("收據號碼");

                    b.Property<string>("ReceiptOwn")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("收據人姓名");

                    b.Property<int?>("Sum")
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ReceiptNumber");

                    b.ToTable("Info_Receipt");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Receipt_del", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("聯絡人姓名");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("聯絡人電話");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DSRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("備註");

                    b.Property<string>("DharmaServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("法會名");

                    b.Property<int?>("DharmaServiceYear")
                        .HasColumnType("int")
                        .HasComment("法會年份");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2")
                        .HasComment("收據日期");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("收據號碼");

                    b.Property<string>("ReceiptOwn")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("收據人姓名");

                    b.Property<int?>("Sum")
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ReceiptNumber");

                    b.ToTable("Info_Receipt_del");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Opt_DharmaService", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("編號代碼");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("法會名");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Opt_DharmaService");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Opt_DonationProject", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DharmaServiceID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("法會項目ID");

                    b.Property<string>("DonationCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("功德類別");

                    b.Property<string>("SerialCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("編號代碼");

                    b.Property<int?>("Sum")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasComment("金額");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsedNumber")
                        .HasColumnType("int")
                        .HasComment("編號已計數");

                    b.HasKey("ID");

                    b.HasIndex("DharmaServiceID");

                    b.ToTable("Opt_DonationProject");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Reg_RollbackInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DonationProjectID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("功德ID");

                    b.Property<string>("LastReceiptNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("收據號碼");

                    b.Property<int?>("PreUsedNumber")
                        .HasColumnType("int")
                        .HasComment("功德已使用數");

                    b.HasKey("ID");

                    b.ToTable("Reg_RollbackInfo");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.ActionLog", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("IP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ITCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LogType")
                        .HasColumnType("int");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ActionLogs");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.DataPrivilege", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DataPrivileges");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FileAttachment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileExt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandlerInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaveMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FileAttachments");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GroupRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ParentId");

                    b.ToTable("FrameworkGroups");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkMenu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FolderOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInherit")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInside")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ShowOnMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("TenantAllowed")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ParentId");

                    b.ToTable("FrameworkMenus");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FrameworkRoles");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkTenant", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DbContext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableSub")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("TCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TDb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TDbType")
                        .HasColumnType("int");

                    b.Property<string>("TDomain")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FrameworkTenants");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ITCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PhotoId");

                    b.ToTable("FrameworkUsers");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkUserGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("FrameworkUserGroups");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkUserRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("FrameworkUserRoles");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkWorkflow", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModelID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModelType")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Submitter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkflowId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkflowName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.ToTable("FrameworkWorkflows");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FunctionPrivilege", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Allowed")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FunctionPrivileges");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.Models.Elsa_Bookmark", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id");

                    b.Property<string>("ActivityId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CorrelationId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkflowInstanceId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.ToTable("Bookmarks", "Elsa");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.Models.Elsa_Trigger", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id");

                    b.Property<string>("ActivityId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkflowDefinitionId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.ToTable("Triggers", "Elsa");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.Models.Elsa_WorkflowDefinition", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("DeleteCompletedInstances")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLatest")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSingleton")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PersistenceBehavior")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("WorkflowDefinitions", "Elsa");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.Models.Elsa_WorkflowExecutionLogRecord", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id");

                    b.Property<string>("ActivityId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("WorkflowInstanceId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.ToTable("WorkflowExecutionLogRecords", "Elsa");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.Models.Elsa_WorkflowInstance", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset?>("CancelledAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ContextId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContextType")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CorrelationId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DefinitionVersionId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("FaultedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FinishedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastExecutedActivityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastExecutedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("WorkflowInstances", "Elsa");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Donor", b =>
                {
                    b.HasOne("BMSHPMS.Models.DharmaService.Info_Receipt", "Receipt")
                        .WithMany("Info_Donors")
                        .HasForeignKey("ReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Donor_del", b =>
                {
                    b.HasOne("BMSHPMS.Models.DharmaService.Info_Receipt_del", "Receipt_del")
                        .WithMany("Info_Donors_del")
                        .HasForeignKey("Receipt_delID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt_del");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Longevity", b =>
                {
                    b.HasOne("BMSHPMS.Models.DharmaService.Info_Receipt", "Receipt")
                        .WithMany("Info_Longevitys")
                        .HasForeignKey("ReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Longevity_del", b =>
                {
                    b.HasOne("BMSHPMS.Models.DharmaService.Info_Receipt_del", "Receipt_del")
                        .WithMany("Info_Longevitys_del")
                        .HasForeignKey("Receipt_delID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt_del");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Memorial", b =>
                {
                    b.HasOne("BMSHPMS.Models.DharmaService.Info_Receipt", "Receipt")
                        .WithMany("Info_Memorials")
                        .HasForeignKey("ReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Memorial_del", b =>
                {
                    b.HasOne("BMSHPMS.Models.DharmaService.Info_Receipt_del", "Receipt_del")
                        .WithMany("Info_Memorials_del")
                        .HasForeignKey("Receipt_delID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt_del");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Opt_DonationProject", b =>
                {
                    b.HasOne("BMSHPMS.Models.DharmaService.Opt_DharmaService", "DharmaService")
                        .WithMany("Opt_DonationProjects")
                        .HasForeignKey("DharmaServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DharmaService");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkGroup", b =>
                {
                    b.HasOne("WalkingTec.Mvvm.Core.FrameworkGroup", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkMenu", b =>
                {
                    b.HasOne("WalkingTec.Mvvm.Core.FrameworkMenu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkUser", b =>
                {
                    b.HasOne("WalkingTec.Mvvm.Core.FileAttachment", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Receipt", b =>
                {
                    b.Navigation("Info_Donors");

                    b.Navigation("Info_Longevitys");

                    b.Navigation("Info_Memorials");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Info_Receipt_del", b =>
                {
                    b.Navigation("Info_Donors_del");

                    b.Navigation("Info_Longevitys_del");

                    b.Navigation("Info_Memorials_del");
                });

            modelBuilder.Entity("BMSHPMS.Models.DharmaService.Opt_DharmaService", b =>
                {
                    b.Navigation("Opt_DonationProjects");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkGroup", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkMenu", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
